@using System.Globalization;
@model IEnumerable<RCCLAccounts.Core.Models.EmployeeInfoVM>
@{
    ViewData["Title"] = "CPF Deposit";
}

<!-- breadcrumb -->
<div class="breadcrumb-header justify-content-between">
    <div class="left-content">
        <span class="main-content-title mg-b-0 mg-b-lg-1">RCCL Contribution</span>
    </div>
    <div class="justify-content-center mt-2">
        <ol class="breadcrumb">
            <li class="breadcrumb-item tx-15"><a asp-action="Index" asp-controller="Home">Dashboard</a></li>
            <li class="breadcrumb-item active" aria-current="page">RCCL Contribution</li>
        </ol>
    </div>
</div>
<!-- /breadcrumb -->
<!-- Row -->
<div class="row row-sm">
    <div class="col-lg-12">
        <div class="card custom-card overflow-hidden">
            <div class="card-body">
                <div class="row row-sm">
                    <div class="col-lg-3">
                        <div class="input-group">
                            <div class="input-group-text">
                                <i class="typcn typcn-calendar-outline tx-24 lh--9 op-6"></i>
                            </div>
                            <select name="month" class="form-control form-select month" data-bs-placeholder="Select Month">
                                @for (var i = 1; i <= 12; i++)
                                {
                                    var selected = i == DateTime.Now.Month ? "selected" : "";
                                    <option selected value="@i">@CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(i)</option>
                                }
                            </select>
                        </div><!-- input-group -->
                    </div><!-- col-4 -->
                    <div class="col-lg-3 mg-t-20 mg-lg-t-0">
                        <div class="input-group">
                            <div class="input-group-text">
                                <i class="typcn typcn-calendar-outline tx-24 lh--9 op-6"></i>
                            </div>
                            <select name="year" class="form-control form-select year" data-bs-placeholder="Select Year">
                                @for (var i = 2015; i <= DateTime.Now.Year; i++)
                                {
                                    var selected = i == DateTime.Now.Year ? "selected" : "";
                                    <option selected value="@i">@i</option>
                                }
                            </select>
                        </div><!-- input-group -->
                    </div>

                    <div class="row row-xs align-items-center mg-b-20">
                        <div class="col-md-12">
                            <button type="button" class="btn btn-outline-success" id="selectAll"> <i class="bi bi-check2-circle"></i>  Select All</button>
                        </div>

                    </div>
                    <div class="row row-xs align-items-center mg-b-20">

                        <div class="col-md-12">
                            <button type="button" class="btn btn-outline-danger" id="deselectAll"> <i class="bi bi-x-circle-fill"></i> Deselect All</button>
                        </div>
                    </div>

                </div>
                <div class="row mt-3">
                    <div class="table-responsive">
                        <table class="table table-bordered text-nowrap border-bottom" id="basic-datatable">
                            <thead>
                                <tr>
                                    <th>#SL</th>
                                    <th class="wd-30p">@Html.DisplayNameFor(model => model.EmployeeNo)</th>
                                    <th class="wd-30p">@Html.DisplayNameFor(model => model.EmployeeName)</th>
                                    <th class="wd-30p">@Html.DisplayNameFor(model => model.BranchId)</th>
                                    <th class="wd-30p">@Html.DisplayNameFor(model => model.BasicSalary)</th>
                                    <th class="wd-30p">@Html.DisplayNameFor(model => model.CompanyContPer)</th>
                                   @* <th class="wd-30p">@Html.DisplayNameFor(model => model.CompanyContPer)</th>*@
                                    <th class="wd-30p">Amount</th>

                                    <th class="wd-40p text-center">Select</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    int rowNo = 0;
                                }
                                @foreach (var item in Model)
                                {
                                    rowNo++;
                                    <tr data-employeeid="@item.EmpolyeeId"
                                        data-basicsalary="@item.BasicSalary"
                                        data-companycontper="@item.CompanyContPer">

                                        <td>@rowNo</td>
                                        <td>@Html.DisplayFor(modelItem => item.EmployeeNo)</td>
                                        <td>@Html.DisplayFor(modelItem => item.EmployeeName)</td>
                                        <td>@Html.DisplayFor(modelItem => item.BranchName)</td>
                                        <td>@Html.DisplayFor(modelItem => item.BasicSalary)</td>
                                        <td>@Html.DisplayFor(modelItem => item.CompanyContPer)%</td>
                                        <td>@(item.BasicSalary * (item.CompanyContPer / 100))</td>
                                        <td class="text-center">
                                            <div class="checkbox">
                                                <div class="custom-checkbox custom-control">
                                                    <input type="checkbox" data-checkboxes="mygroup" class="custom-control-input selected" id="checkbox-@rowNo">
                                                    <label for="checkbox-@rowNo" class="custom-control-label mt-1"></label>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <td colspan="6" class="text-center">
                                        <button type="button" class="btn btn-primary save-btn" data-backUrl="@Url.Action("CompanyDepositIndex", "CpfDeposit")">Save</button>
                                    </td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div>

    <a asp-action="CompanyDepositIndex">
        <button type="button" class="btn btn-outline-info" data-mdb-ripple-color="dark" style="margin:15px;">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-skip-start-btn-fill" viewBox="0 0 16 16">
                <path d="M0 12V4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2zm9.71-6.907L7 7.028V5.5a.5.5 0 0 0-1 0v5a.5.5 0 0 0 1 0V8.972l2.71 1.935a.5.5 0 0 0 .79-.407v-5a.5.5 0 0 0-.79-.407z"></path>
            </svg>
            Back to List
        </button>
    </a>
</div>

@section Scripts {
    <!-- Internal  Sweet-Alert js -->
    <script src="~/assets/plugins/sweet-alert/sweetalert.min.js"></script>
    <script>
        $(document).ready(function () {
            // Function to handle the "Select All" button click
            $('#selectAll').click(function () {
                $('.selected').prop('checked', true);
            });

            // Function to handle the "Deselect All" button click
            $('#deselectAll').click(function () {
                $('.selected').prop('checked', false);
            });

            $('.save-btn').click(function () {
                let backUrl = $(this).data('backurl');
                $('body').removeClass('timer-alert');
                swal({
                    title: "Are you sure?",
                    text: "You want to save?",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonClass: "btn btn-success",
                    confirmButtonText: "Yes, Save it!",
                    closeOnConfirm: false,
                    showLoaderOnConfirm: true
                }, function () {
                    let selectedDeposits = [];
                    $('.selected').each(function () {
                        if ($(this).is(':checked')) {
                            selectedDeposits.push({
                                month: $('.month').val(),
                                year: $('.year').val(),
                                employeeid: $(this).closest('tr').data('employeeid'),
                                employeeno: $(this).closest('tr').data('employeeno'),
                                basicsalary: $(this).closest('tr').data('basicsalary'),
                                contributionPercentage: $(this).closest('tr').data('companycontper')
                            });
                        }
                    });
                    console.log(selectedDeposits);
                    $.post('@Url.Action("SaveCompanyDeposit", "CpfDeposit")', { employeeDeposits: selectedDeposits }, function (data) {
                        console.log(data);
                        if (data >= 1) {
                            swal({
                                title: "Success!",
                                text: "Successfully added",
                                type: "success"
                            }, function () {
                                //return to backUrl page
                                location.href = backUrl;
                            }
                            );
                        }
                        else {
                            swal("Error!", "Something went wrong.", "error");
                        }
                    });
                });
            });
        });
    </script>
}
